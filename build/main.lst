ARM GAS  /tmp/ccthmvjz.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB76:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "debug.h"
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/ccthmvjz.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** IWDG_HandleTypeDef hiwdg;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  51:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** extern UART_HandleTypeDef huart1;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE BEGIN PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** static void MX_SPI1_Init(void);
  63:Core/Src/main.c **** static void MX_TIM1_Init(void);
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** static void MX_ADC1_Init(void);
  66:Core/Src/main.c **** static void MX_I2C2_Init(void);
  67:Core/Src/main.c **** static void MX_IWDG_Init(void);
  68:Core/Src/main.c **** static void MX_TIM3_Init(void);
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END PFP */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  75:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE END 0 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /**
  80:Core/Src/main.c ****   * @brief  The application entry point.
  81:Core/Src/main.c ****   * @retval int
  82:Core/Src/main.c ****   */
  83:Core/Src/main.c **** int main(void)
  84:Core/Src/main.c **** {
  85:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END 1 */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  90:Core/Src/main.c **** 
ARM GAS  /tmp/ccthmvjz.s 			page 3


  91:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  92:Core/Src/main.c ****   HAL_Init();
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END Init */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Configure the system clock */
  99:Core/Src/main.c ****   SystemClock_Config();
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END SysInit */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Initialize all configured peripherals */
 106:Core/Src/main.c ****   MX_GPIO_Init();
 107:Core/Src/main.c ****   MX_SPI1_Init();
 108:Core/Src/main.c ****   MX_TIM1_Init();
 109:Core/Src/main.c ****   debug_init();
 110:Core/Src/main.c ****   MX_ADC1_Init();
 111:Core/Src/main.c ****   MX_I2C2_Init();
 112:Core/Src/main.c ****   MX_IWDG_Init();
 113:Core/Src/main.c ****   MX_TIM3_Init();
 114:Core/Src/main.c ****   //MX_USART1_UART_Init();
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   HAL_GPIO_TogglePin(LED_PIN_GPIO_Port,LED_PIN_Pin);
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END 2 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Infinite loop */
 125:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 126:Core/Src/main.c ****   while (1)
 127:Core/Src/main.c ****   {
 128:Core/Src/main.c ****     /* USER CODE END WHILE */
 129:Core/Src/main.c ****     debug_print("test modulo debug \r\n");
 130:Core/Src/main.c ****     delay(500);
 131:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 132:Core/Src/main.c ****   }
 133:Core/Src/main.c ****   /* USER CODE END 3 */
 134:Core/Src/main.c **** }
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** /**
 137:Core/Src/main.c ****   * @brief System Clock Configuration
 138:Core/Src/main.c ****   * @retval None
 139:Core/Src/main.c ****   */
 140:Core/Src/main.c **** void SystemClock_Config(void)
 141:Core/Src/main.c **** {
 142:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 143:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 144:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 147:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
ARM GAS  /tmp/ccthmvjz.s 			page 4


 148:Core/Src/main.c ****   */
 149:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSI;
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 152:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 154:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     Error_Handler();
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 160:Core/Src/main.c ****   */
 161:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 162:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV4;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     Error_Handler();
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 173:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 174:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 175:Core/Src/main.c ****   {
 176:Core/Src/main.c ****     Error_Handler();
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c **** }
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** /**
 181:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 182:Core/Src/main.c ****   * @param None
 183:Core/Src/main.c ****   * @retval None
 184:Core/Src/main.c ****   */
 185:Core/Src/main.c **** static void MX_ADC1_Init(void)
 186:Core/Src/main.c **** {
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /** Common config
 199:Core/Src/main.c ****   */
 200:Core/Src/main.c ****   hadc1.Instance = ADC1;
 201:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 202:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 203:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 204:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
ARM GAS  /tmp/ccthmvjz.s 			page 5


 205:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 206:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 207:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 208:Core/Src/main.c ****   {
 209:Core/Src/main.c ****     Error_Handler();
 210:Core/Src/main.c ****   }
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /** Configure Regular Channel
 213:Core/Src/main.c ****   */
 214:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 215:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 216:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 217:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 218:Core/Src/main.c ****   {
 219:Core/Src/main.c ****     Error_Handler();
 220:Core/Src/main.c ****   }
 221:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** }
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** /**
 228:Core/Src/main.c ****   * @brief I2C2 Initialization Function
 229:Core/Src/main.c ****   * @param None
 230:Core/Src/main.c ****   * @retval None
 231:Core/Src/main.c ****   */
 232:Core/Src/main.c **** static void MX_I2C2_Init(void)
 233:Core/Src/main.c **** {
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
 242:Core/Src/main.c ****   hi2c2.Instance = I2C2;
 243:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 50000;
 244:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 245:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 246:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 247:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 248:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 249:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 250:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 251:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 252:Core/Src/main.c ****   {
 253:Core/Src/main.c ****     Error_Handler();
 254:Core/Src/main.c ****   }
 255:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** }
 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** /**
ARM GAS  /tmp/ccthmvjz.s 			page 6


 262:Core/Src/main.c ****   * @brief IWDG Initialization Function
 263:Core/Src/main.c ****   * @param None
 264:Core/Src/main.c ****   * @retval None
 265:Core/Src/main.c ****   */
 266:Core/Src/main.c **** static void MX_IWDG_Init(void)
 267:Core/Src/main.c **** {
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 0 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* USER CODE END IWDG_Init 0 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 1 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /* USER CODE END IWDG_Init 1 */
 276:Core/Src/main.c ****   hiwdg.Instance = IWDG;
 277:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 278:Core/Src/main.c ****   hiwdg.Init.Reload = 4095;
 279:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 280:Core/Src/main.c ****   {
 281:Core/Src/main.c ****     Error_Handler();
 282:Core/Src/main.c ****   }
 283:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 2 */
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /* USER CODE END IWDG_Init 2 */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** }
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** /**
 290:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 291:Core/Src/main.c ****   * @param None
 292:Core/Src/main.c ****   * @retval None
 293:Core/Src/main.c ****   */
 294:Core/Src/main.c **** static void MX_SPI1_Init(void)
 295:Core/Src/main.c **** {
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 304:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 305:Core/Src/main.c ****   hspi1.Instance = SPI1;
 306:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 307:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 308:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 309:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 310:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 311:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 312:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 313:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 314:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 315:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 316:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 317:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 318:Core/Src/main.c ****   {
ARM GAS  /tmp/ccthmvjz.s 			page 7


 319:Core/Src/main.c ****     Error_Handler();
 320:Core/Src/main.c ****   }
 321:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** }
 326:Core/Src/main.c **** 
 327:Core/Src/main.c **** /**
 328:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 329:Core/Src/main.c ****   * @param None
 330:Core/Src/main.c ****   * @retval None
 331:Core/Src/main.c ****   */
 332:Core/Src/main.c **** static void MX_TIM1_Init(void)
 333:Core/Src/main.c **** {
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 340:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 345:Core/Src/main.c ****   htim1.Instance = TIM1;
 346:Core/Src/main.c ****   htim1.Init.Prescaler = 1000;
 347:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 348:Core/Src/main.c ****   htim1.Init.Period = 1000;
 349:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 350:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 351:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 352:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 353:Core/Src/main.c ****   {
 354:Core/Src/main.c ****     Error_Handler();
 355:Core/Src/main.c ****   }
 356:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 357:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 358:Core/Src/main.c ****   {
 359:Core/Src/main.c ****     Error_Handler();
 360:Core/Src/main.c ****   }
 361:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 362:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 363:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 364:Core/Src/main.c ****   {
 365:Core/Src/main.c ****     Error_Handler();
 366:Core/Src/main.c ****   }
 367:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 370:Core/Src/main.c **** 
 371:Core/Src/main.c **** }
 372:Core/Src/main.c **** 
 373:Core/Src/main.c **** /**
 374:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 375:Core/Src/main.c ****   * @param None
ARM GAS  /tmp/ccthmvjz.s 			page 8


 376:Core/Src/main.c ****   * @retval None
 377:Core/Src/main.c ****   */
 378:Core/Src/main.c **** static void MX_TIM3_Init(void)
 379:Core/Src/main.c **** {
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 386:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 391:Core/Src/main.c ****   htim3.Instance = TIM3;
 392:Core/Src/main.c ****   htim3.Init.Prescaler = 1000;
 393:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 394:Core/Src/main.c ****   htim3.Init.Period = 1000;
 395:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 396:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 397:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 398:Core/Src/main.c ****   {
 399:Core/Src/main.c ****     Error_Handler();
 400:Core/Src/main.c ****   }
 401:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 402:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 403:Core/Src/main.c ****   {
 404:Core/Src/main.c ****     Error_Handler();
 405:Core/Src/main.c ****   }
 406:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 407:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 408:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 409:Core/Src/main.c ****   {
 410:Core/Src/main.c ****     Error_Handler();
 411:Core/Src/main.c ****   }
 412:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 415:Core/Src/main.c **** 
 416:Core/Src/main.c **** }
 417:Core/Src/main.c **** 
 418:Core/Src/main.c **** 
 419:Core/Src/main.c **** /**
 420:Core/Src/main.c ****   * @brief GPIO Initialization Function
 421:Core/Src/main.c ****   * @param None
 422:Core/Src/main.c ****   * @retval None
 423:Core/Src/main.c ****   */
 424:Core/Src/main.c **** static void MX_GPIO_Init(void)
 425:Core/Src/main.c **** {
  26              		.loc 1 425 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccthmvjz.s 			page 9


  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 86B0     		sub	sp, sp, #24
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
 426:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 426 3 view .LVU1
  43              		.loc 1 426 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0294     		str	r4, [sp, #8]
  46 000a 0394     		str	r4, [sp, #12]
  47 000c 0494     		str	r4, [sp, #16]
  48 000e 0594     		str	r4, [sp, #20]
 427:Core/Src/main.c **** 
 428:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 429:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 429 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 429 3 view .LVU4
  52              		.loc 1 429 3 view .LVU5
  53 0010 264B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F00402 		orr	r2, r2, #4
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 429 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F00402 		and	r2, r2, #4
  60 0020 0092     		str	r2, [sp]
  61              		.loc 1 429 3 view .LVU7
  62 0022 009A     		ldr	r2, [sp]
  63              	.LBE4:
  64              		.loc 1 429 3 view .LVU8
 430:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  65              		.loc 1 430 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 430 3 view .LVU10
  68              		.loc 1 430 3 view .LVU11
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F00802 		orr	r2, r2, #8
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 430 3 view .LVU12
  73 002c 9B69     		ldr	r3, [r3, #24]
  74 002e 03F00803 		and	r3, r3, #8
  75 0032 0193     		str	r3, [sp, #4]
  76              		.loc 1 430 3 view .LVU13
  77 0034 019B     		ldr	r3, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 430 3 view .LVU14
 431:Core/Src/main.c **** 
 432:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 433:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4|GPIO_PIN_12, GPIO_PIN_RESET);
  80              		.loc 1 433 3 view .LVU15
  81 0036 1E4D     		ldr	r5, .L3+4
ARM GAS  /tmp/ccthmvjz.s 			page 10


  82 0038 2246     		mov	r2, r4
  83 003a 41F21001 		movw	r1, #4112
  84 003e 2846     		mov	r0, r5
  85 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL0:
 434:Core/Src/main.c **** 
 435:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 436:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_RESET);
  87              		.loc 1 436 3 view .LVU16
  88 0044 1B4E     		ldr	r6, .L3+8
  89 0046 2246     		mov	r2, r4
  90 0048 0421     		movs	r1, #4
  91 004a 3046     		mov	r0, r6
  92 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL1:
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /*Configure GPIO pins : PA4 PA12 */
 439:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_12;
  94              		.loc 1 439 3 view .LVU17
  95              		.loc 1 439 23 is_stmt 0 view .LVU18
  96 0050 41F21003 		movw	r3, #4112
  97 0054 0293     		str	r3, [sp, #8]
 440:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  98              		.loc 1 440 3 is_stmt 1 view .LVU19
  99              		.loc 1 440 24 is_stmt 0 view .LVU20
 100 0056 4FF00108 		mov	r8, #1
 101 005a CDF80C80 		str	r8, [sp, #12]
 441:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 102              		.loc 1 441 3 is_stmt 1 view .LVU21
 103              		.loc 1 441 24 is_stmt 0 view .LVU22
 104 005e 0494     		str	r4, [sp, #16]
 442:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 105              		.loc 1 442 3 is_stmt 1 view .LVU23
 106              		.loc 1 442 25 is_stmt 0 view .LVU24
 107 0060 0227     		movs	r7, #2
 108 0062 0597     		str	r7, [sp, #20]
 443:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 109              		.loc 1 443 3 is_stmt 1 view .LVU25
 110 0064 02A9     		add	r1, sp, #8
 111 0066 2846     		mov	r0, r5
 112 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 113              	.LVL2:
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   /*Configure GPIO pin : PB2 */
 446:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 114              		.loc 1 446 3 view .LVU26
 115              		.loc 1 446 23 is_stmt 0 view .LVU27
 116 006c 0423     		movs	r3, #4
 117 006e 0293     		str	r3, [sp, #8]
 447:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 118              		.loc 1 447 3 is_stmt 1 view .LVU28
 119              		.loc 1 447 24 is_stmt 0 view .LVU29
 120 0070 CDF80C80 		str	r8, [sp, #12]
 448:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 121              		.loc 1 448 3 is_stmt 1 view .LVU30
 122              		.loc 1 448 24 is_stmt 0 view .LVU31
 123 0074 0494     		str	r4, [sp, #16]
ARM GAS  /tmp/ccthmvjz.s 			page 11


 449:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 124              		.loc 1 449 3 is_stmt 1 view .LVU32
 125              		.loc 1 449 25 is_stmt 0 view .LVU33
 126 0076 0597     		str	r7, [sp, #20]
 450:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 127              		.loc 1 450 3 is_stmt 1 view .LVU34
 128 0078 02A9     		add	r1, sp, #8
 129 007a 3046     		mov	r0, r6
 130 007c FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL3:
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /*Configure GPIO pin : PA15 */
 453:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_15;
 132              		.loc 1 453 3 view .LVU35
 133              		.loc 1 453 23 is_stmt 0 view .LVU36
 134 0080 4FF40043 		mov	r3, #32768
 135 0084 0293     		str	r3, [sp, #8]
 454:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 136              		.loc 1 454 3 is_stmt 1 view .LVU37
 137              		.loc 1 454 24 is_stmt 0 view .LVU38
 138 0086 0C4B     		ldr	r3, .L3+12
 139 0088 0393     		str	r3, [sp, #12]
 455:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 140              		.loc 1 455 3 is_stmt 1 view .LVU39
 141              		.loc 1 455 24 is_stmt 0 view .LVU40
 142 008a 0494     		str	r4, [sp, #16]
 456:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 143              		.loc 1 456 3 is_stmt 1 view .LVU41
 144 008c 02A9     		add	r1, sp, #8
 145 008e 2846     		mov	r0, r5
 146 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 147              	.LVL4:
 457:Core/Src/main.c **** 
 458:Core/Src/main.c ****   /* EXTI interrupt init*/
 459:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 148              		.loc 1 459 3 view .LVU42
 149 0094 2246     		mov	r2, r4
 150 0096 2146     		mov	r1, r4
 151 0098 2820     		movs	r0, #40
 152 009a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 153              	.LVL5:
 460:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 154              		.loc 1 460 3 view .LVU43
 155 009e 2820     		movs	r0, #40
 156 00a0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 157              	.LVL6:
 461:Core/Src/main.c **** 
 462:Core/Src/main.c **** }
 158              		.loc 1 462 1 is_stmt 0 view .LVU44
 159 00a4 06B0     		add	sp, sp, #24
 160              	.LCFI2:
 161              		.cfi_def_cfa_offset 24
 162              		@ sp needed
 163 00a6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 164              	.L4:
 165 00aa 00BF     		.align	2
 166              	.L3:
ARM GAS  /tmp/ccthmvjz.s 			page 12


 167 00ac 00100240 		.word	1073876992
 168 00b0 00080140 		.word	1073809408
 169 00b4 000C0140 		.word	1073810432
 170 00b8 00001110 		.word	269549568
 171              		.cfi_endproc
 172              	.LFE76:
 174              		.section	.text.Error_Handler,"ax",%progbits
 175              		.align	1
 176              		.global	Error_Handler
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu softvfp
 182              	Error_Handler:
 183              	.LFB77:
 463:Core/Src/main.c **** 
 464:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 465:Core/Src/main.c **** 
 466:Core/Src/main.c **** /* USER CODE END 4 */
 467:Core/Src/main.c **** 
 468:Core/Src/main.c **** /**
 469:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 470:Core/Src/main.c ****   * @retval None
 471:Core/Src/main.c ****   */
 472:Core/Src/main.c **** void Error_Handler(void)
 473:Core/Src/main.c **** {
 184              		.loc 1 473 1 is_stmt 1 view -0
 185              		.cfi_startproc
 186              		@ Volatile: function does not return.
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 474:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 475:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 476:Core/Src/main.c ****   __disable_irq();
 190              		.loc 1 476 3 view .LVU46
 191              	.LBB6:
 192              	.LBI6:
 193              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
ARM GAS  /tmp/ccthmvjz.s 			page 13


  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccthmvjz.s 			page 14


  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccthmvjz.s 			page 15


 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 194              		.loc 2 140 27 view .LVU47
 195              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 196              		.loc 2 142 3 view .LVU48
 197              		.syntax unified
 198              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 199 0000 72B6     		cpsid i
 200              	@ 0 "" 2
 201              		.thumb
 202              		.syntax unified
 203              	.L6:
 204              	.LBE7:
 205              	.LBE6:
 477:Core/Src/main.c ****   while (1)
 206              		.loc 1 477 3 discriminator 1 view .LVU49
 478:Core/Src/main.c ****   {
 479:Core/Src/main.c ****   }
 207              		.loc 1 479 3 discriminator 1 view .LVU50
 477:Core/Src/main.c ****   while (1)
 208              		.loc 1 477 9 discriminator 1 view .LVU51
 209 0002 FEE7     		b	.L6
 210              		.cfi_endproc
 211              	.LFE77:
 213              		.section	.text.MX_SPI1_Init,"ax",%progbits
 214              		.align	1
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu softvfp
 220              	MX_SPI1_Init:
 221              	.LFB73:
 295:Core/Src/main.c **** 
 222              		.loc 1 295 1 view -0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226 0000 08B5     		push	{r3, lr}
 227              	.LCFI3:
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 3, -8
 230              		.cfi_offset 14, -4
 305:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 231              		.loc 1 305 3 view .LVU53
 305:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 232              		.loc 1 305 18 is_stmt 0 view .LVU54
 233 0002 0D48     		ldr	r0, .L11
 234 0004 0D4B     		ldr	r3, .L11+4
 235 0006 0360     		str	r3, [r0]
ARM GAS  /tmp/ccthmvjz.s 			page 16


 306:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 236              		.loc 1 306 3 is_stmt 1 view .LVU55
 306:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 237              		.loc 1 306 19 is_stmt 0 view .LVU56
 238 0008 4FF48273 		mov	r3, #260
 239 000c 4360     		str	r3, [r0, #4]
 307:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 240              		.loc 1 307 3 is_stmt 1 view .LVU57
 307:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 241              		.loc 1 307 24 is_stmt 0 view .LVU58
 242 000e 0023     		movs	r3, #0
 243 0010 8360     		str	r3, [r0, #8]
 308:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 244              		.loc 1 308 3 is_stmt 1 view .LVU59
 308:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 245              		.loc 1 308 23 is_stmt 0 view .LVU60
 246 0012 C360     		str	r3, [r0, #12]
 309:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 247              		.loc 1 309 3 is_stmt 1 view .LVU61
 309:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 248              		.loc 1 309 26 is_stmt 0 view .LVU62
 249 0014 0361     		str	r3, [r0, #16]
 310:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 250              		.loc 1 310 3 is_stmt 1 view .LVU63
 310:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 251              		.loc 1 310 23 is_stmt 0 view .LVU64
 252 0016 4361     		str	r3, [r0, #20]
 311:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 253              		.loc 1 311 3 is_stmt 1 view .LVU65
 311:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 254              		.loc 1 311 18 is_stmt 0 view .LVU66
 255 0018 4FF40072 		mov	r2, #512
 256 001c 8261     		str	r2, [r0, #24]
 312:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 257              		.loc 1 312 3 is_stmt 1 view .LVU67
 312:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 258              		.loc 1 312 32 is_stmt 0 view .LVU68
 259 001e 0822     		movs	r2, #8
 260 0020 C261     		str	r2, [r0, #28]
 313:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 261              		.loc 1 313 3 is_stmt 1 view .LVU69
 313:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 262              		.loc 1 313 23 is_stmt 0 view .LVU70
 263 0022 0362     		str	r3, [r0, #32]
 314:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 264              		.loc 1 314 3 is_stmt 1 view .LVU71
 314:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 265              		.loc 1 314 21 is_stmt 0 view .LVU72
 266 0024 4362     		str	r3, [r0, #36]
 315:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 267              		.loc 1 315 3 is_stmt 1 view .LVU73
 315:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 268              		.loc 1 315 29 is_stmt 0 view .LVU74
 269 0026 8362     		str	r3, [r0, #40]
 316:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 270              		.loc 1 316 3 is_stmt 1 view .LVU75
 316:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
ARM GAS  /tmp/ccthmvjz.s 			page 17


 271              		.loc 1 316 28 is_stmt 0 view .LVU76
 272 0028 0A23     		movs	r3, #10
 273 002a C362     		str	r3, [r0, #44]
 317:Core/Src/main.c ****   {
 274              		.loc 1 317 3 is_stmt 1 view .LVU77
 317:Core/Src/main.c ****   {
 275              		.loc 1 317 7 is_stmt 0 view .LVU78
 276 002c FFF7FEFF 		bl	HAL_SPI_Init
 277              	.LVL7:
 317:Core/Src/main.c ****   {
 278              		.loc 1 317 6 view .LVU79
 279 0030 00B9     		cbnz	r0, .L10
 325:Core/Src/main.c **** 
 280              		.loc 1 325 1 view .LVU80
 281 0032 08BD     		pop	{r3, pc}
 282              	.L10:
 319:Core/Src/main.c ****   }
 283              		.loc 1 319 5 is_stmt 1 view .LVU81
 284 0034 FFF7FEFF 		bl	Error_Handler
 285              	.LVL8:
 286              	.L12:
 287              		.align	2
 288              	.L11:
 289 0038 00000000 		.word	.LANCHOR0
 290 003c 00300140 		.word	1073819648
 291              		.cfi_endproc
 292              	.LFE73:
 294              		.section	.text.MX_TIM1_Init,"ax",%progbits
 295              		.align	1
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 299              		.fpu softvfp
 301              	MX_TIM1_Init:
 302              	.LFB74:
 333:Core/Src/main.c **** 
 303              		.loc 1 333 1 view -0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 24
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307 0000 00B5     		push	{lr}
 308              	.LCFI4:
 309              		.cfi_def_cfa_offset 4
 310              		.cfi_offset 14, -4
 311 0002 87B0     		sub	sp, sp, #28
 312              	.LCFI5:
 313              		.cfi_def_cfa_offset 32
 339:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 314              		.loc 1 339 3 view .LVU83
 339:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 315              		.loc 1 339 26 is_stmt 0 view .LVU84
 316 0004 0023     		movs	r3, #0
 317 0006 0293     		str	r3, [sp, #8]
 318 0008 0393     		str	r3, [sp, #12]
 319 000a 0493     		str	r3, [sp, #16]
 320 000c 0593     		str	r3, [sp, #20]
 340:Core/Src/main.c **** 
ARM GAS  /tmp/ccthmvjz.s 			page 18


 321              		.loc 1 340 3 is_stmt 1 view .LVU85
 340:Core/Src/main.c **** 
 322              		.loc 1 340 27 is_stmt 0 view .LVU86
 323 000e 0093     		str	r3, [sp]
 324 0010 0193     		str	r3, [sp, #4]
 345:Core/Src/main.c ****   htim1.Init.Prescaler = 1000;
 325              		.loc 1 345 3 is_stmt 1 view .LVU87
 345:Core/Src/main.c ****   htim1.Init.Prescaler = 1000;
 326              		.loc 1 345 18 is_stmt 0 view .LVU88
 327 0012 1348     		ldr	r0, .L21
 328 0014 134A     		ldr	r2, .L21+4
 329 0016 0260     		str	r2, [r0]
 346:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 330              		.loc 1 346 3 is_stmt 1 view .LVU89
 346:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 331              		.loc 1 346 24 is_stmt 0 view .LVU90
 332 0018 4FF47A72 		mov	r2, #1000
 333 001c 4260     		str	r2, [r0, #4]
 347:Core/Src/main.c ****   htim1.Init.Period = 1000;
 334              		.loc 1 347 3 is_stmt 1 view .LVU91
 347:Core/Src/main.c ****   htim1.Init.Period = 1000;
 335              		.loc 1 347 26 is_stmt 0 view .LVU92
 336 001e 8360     		str	r3, [r0, #8]
 348:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 337              		.loc 1 348 3 is_stmt 1 view .LVU93
 348:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 338              		.loc 1 348 21 is_stmt 0 view .LVU94
 339 0020 C260     		str	r2, [r0, #12]
 349:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 340              		.loc 1 349 3 is_stmt 1 view .LVU95
 349:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 341              		.loc 1 349 28 is_stmt 0 view .LVU96
 342 0022 0361     		str	r3, [r0, #16]
 350:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 343              		.loc 1 350 3 is_stmt 1 view .LVU97
 350:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 344              		.loc 1 350 32 is_stmt 0 view .LVU98
 345 0024 4361     		str	r3, [r0, #20]
 351:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 346              		.loc 1 351 3 is_stmt 1 view .LVU99
 351:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 347              		.loc 1 351 32 is_stmt 0 view .LVU100
 348 0026 8361     		str	r3, [r0, #24]
 352:Core/Src/main.c ****   {
 349              		.loc 1 352 3 is_stmt 1 view .LVU101
 352:Core/Src/main.c ****   {
 350              		.loc 1 352 7 is_stmt 0 view .LVU102
 351 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 352              	.LVL9:
 352:Core/Src/main.c ****   {
 353              		.loc 1 352 6 view .LVU103
 354 002c 90B9     		cbnz	r0, .L18
 356:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 355              		.loc 1 356 3 is_stmt 1 view .LVU104
 356:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 356              		.loc 1 356 34 is_stmt 0 view .LVU105
 357 002e 4FF48053 		mov	r3, #4096
ARM GAS  /tmp/ccthmvjz.s 			page 19


 358 0032 0293     		str	r3, [sp, #8]
 357:Core/Src/main.c ****   {
 359              		.loc 1 357 3 is_stmt 1 view .LVU106
 357:Core/Src/main.c ****   {
 360              		.loc 1 357 7 is_stmt 0 view .LVU107
 361 0034 02A9     		add	r1, sp, #8
 362 0036 0A48     		ldr	r0, .L21
 363 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 364              	.LVL10:
 357:Core/Src/main.c ****   {
 365              		.loc 1 357 6 view .LVU108
 366 003c 60B9     		cbnz	r0, .L19
 361:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 367              		.loc 1 361 3 is_stmt 1 view .LVU109
 361:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 368              		.loc 1 361 37 is_stmt 0 view .LVU110
 369 003e 0023     		movs	r3, #0
 370 0040 0093     		str	r3, [sp]
 362:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 371              		.loc 1 362 3 is_stmt 1 view .LVU111
 362:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 372              		.loc 1 362 33 is_stmt 0 view .LVU112
 373 0042 0193     		str	r3, [sp, #4]
 363:Core/Src/main.c ****   {
 374              		.loc 1 363 3 is_stmt 1 view .LVU113
 363:Core/Src/main.c ****   {
 375              		.loc 1 363 7 is_stmt 0 view .LVU114
 376 0044 6946     		mov	r1, sp
 377 0046 0648     		ldr	r0, .L21
 378 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 379              	.LVL11:
 363:Core/Src/main.c ****   {
 380              		.loc 1 363 6 view .LVU115
 381 004c 30B9     		cbnz	r0, .L20
 371:Core/Src/main.c **** 
 382              		.loc 1 371 1 view .LVU116
 383 004e 07B0     		add	sp, sp, #28
 384              	.LCFI6:
 385              		.cfi_remember_state
 386              		.cfi_def_cfa_offset 4
 387              		@ sp needed
 388 0050 5DF804FB 		ldr	pc, [sp], #4
 389              	.L18:
 390              	.LCFI7:
 391              		.cfi_restore_state
 354:Core/Src/main.c ****   }
 392              		.loc 1 354 5 is_stmt 1 view .LVU117
 393 0054 FFF7FEFF 		bl	Error_Handler
 394              	.LVL12:
 395              	.L19:
 359:Core/Src/main.c ****   }
 396              		.loc 1 359 5 view .LVU118
 397 0058 FFF7FEFF 		bl	Error_Handler
 398              	.LVL13:
 399              	.L20:
 365:Core/Src/main.c ****   }
 400              		.loc 1 365 5 view .LVU119
ARM GAS  /tmp/ccthmvjz.s 			page 20


 401 005c FFF7FEFF 		bl	Error_Handler
 402              	.LVL14:
 403              	.L22:
 404              		.align	2
 405              	.L21:
 406 0060 00000000 		.word	.LANCHOR1
 407 0064 002C0140 		.word	1073818624
 408              		.cfi_endproc
 409              	.LFE74:
 411              		.section	.text.MX_ADC1_Init,"ax",%progbits
 412              		.align	1
 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 416              		.fpu softvfp
 418              	MX_ADC1_Init:
 419              	.LFB70:
 186:Core/Src/main.c **** 
 420              		.loc 1 186 1 view -0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 16
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424 0000 00B5     		push	{lr}
 425              	.LCFI8:
 426              		.cfi_def_cfa_offset 4
 427              		.cfi_offset 14, -4
 428 0002 85B0     		sub	sp, sp, #20
 429              	.LCFI9:
 430              		.cfi_def_cfa_offset 24
 192:Core/Src/main.c **** 
 431              		.loc 1 192 3 view .LVU121
 192:Core/Src/main.c **** 
 432              		.loc 1 192 26 is_stmt 0 view .LVU122
 433 0004 0023     		movs	r3, #0
 434 0006 0193     		str	r3, [sp, #4]
 435 0008 0293     		str	r3, [sp, #8]
 436 000a 0393     		str	r3, [sp, #12]
 200:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 437              		.loc 1 200 3 is_stmt 1 view .LVU123
 200:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 438              		.loc 1 200 18 is_stmt 0 view .LVU124
 439 000c 0F48     		ldr	r0, .L29
 440 000e 104A     		ldr	r2, .L29+4
 441 0010 0260     		str	r2, [r0]
 201:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 442              		.loc 1 201 3 is_stmt 1 view .LVU125
 201:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 443              		.loc 1 201 27 is_stmt 0 view .LVU126
 444 0012 8360     		str	r3, [r0, #8]
 202:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 445              		.loc 1 202 3 is_stmt 1 view .LVU127
 202:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 446              		.loc 1 202 33 is_stmt 0 view .LVU128
 447 0014 0373     		strb	r3, [r0, #12]
 203:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 448              		.loc 1 203 3 is_stmt 1 view .LVU129
 203:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
ARM GAS  /tmp/ccthmvjz.s 			page 21


 449              		.loc 1 203 36 is_stmt 0 view .LVU130
 450 0016 0375     		strb	r3, [r0, #20]
 204:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 451              		.loc 1 204 3 is_stmt 1 view .LVU131
 204:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 452              		.loc 1 204 31 is_stmt 0 view .LVU132
 453 0018 4FF46022 		mov	r2, #917504
 454 001c C261     		str	r2, [r0, #28]
 205:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 455              		.loc 1 205 3 is_stmt 1 view .LVU133
 205:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 456              		.loc 1 205 24 is_stmt 0 view .LVU134
 457 001e 4360     		str	r3, [r0, #4]
 206:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 458              		.loc 1 206 3 is_stmt 1 view .LVU135
 206:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 459              		.loc 1 206 30 is_stmt 0 view .LVU136
 460 0020 0123     		movs	r3, #1
 461 0022 0361     		str	r3, [r0, #16]
 207:Core/Src/main.c ****   {
 462              		.loc 1 207 3 is_stmt 1 view .LVU137
 207:Core/Src/main.c ****   {
 463              		.loc 1 207 7 is_stmt 0 view .LVU138
 464 0024 FFF7FEFF 		bl	HAL_ADC_Init
 465              	.LVL15:
 207:Core/Src/main.c ****   {
 466              		.loc 1 207 6 view .LVU139
 467 0028 60B9     		cbnz	r0, .L27
 214:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 468              		.loc 1 214 3 is_stmt 1 view .LVU140
 214:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 469              		.loc 1 214 19 is_stmt 0 view .LVU141
 470 002a 0023     		movs	r3, #0
 471 002c 0193     		str	r3, [sp, #4]
 215:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 472              		.loc 1 215 3 is_stmt 1 view .LVU142
 215:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 473              		.loc 1 215 16 is_stmt 0 view .LVU143
 474 002e 0122     		movs	r2, #1
 475 0030 0292     		str	r2, [sp, #8]
 216:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 476              		.loc 1 216 3 is_stmt 1 view .LVU144
 216:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 477              		.loc 1 216 24 is_stmt 0 view .LVU145
 478 0032 0393     		str	r3, [sp, #12]
 217:Core/Src/main.c ****   {
 479              		.loc 1 217 3 is_stmt 1 view .LVU146
 217:Core/Src/main.c ****   {
 480              		.loc 1 217 7 is_stmt 0 view .LVU147
 481 0034 01A9     		add	r1, sp, #4
 482 0036 0548     		ldr	r0, .L29
 483 0038 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 484              	.LVL16:
 217:Core/Src/main.c ****   {
 485              		.loc 1 217 6 view .LVU148
 486 003c 20B9     		cbnz	r0, .L28
 225:Core/Src/main.c **** 
ARM GAS  /tmp/ccthmvjz.s 			page 22


 487              		.loc 1 225 1 view .LVU149
 488 003e 05B0     		add	sp, sp, #20
 489              	.LCFI10:
 490              		.cfi_remember_state
 491              		.cfi_def_cfa_offset 4
 492              		@ sp needed
 493 0040 5DF804FB 		ldr	pc, [sp], #4
 494              	.L27:
 495              	.LCFI11:
 496              		.cfi_restore_state
 209:Core/Src/main.c ****   }
 497              		.loc 1 209 5 is_stmt 1 view .LVU150
 498 0044 FFF7FEFF 		bl	Error_Handler
 499              	.LVL17:
 500              	.L28:
 219:Core/Src/main.c ****   }
 501              		.loc 1 219 5 view .LVU151
 502 0048 FFF7FEFF 		bl	Error_Handler
 503              	.LVL18:
 504              	.L30:
 505              		.align	2
 506              	.L29:
 507 004c 00000000 		.word	.LANCHOR2
 508 0050 00240140 		.word	1073816576
 509              		.cfi_endproc
 510              	.LFE70:
 512              		.section	.text.MX_I2C2_Init,"ax",%progbits
 513              		.align	1
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 517              		.fpu softvfp
 519              	MX_I2C2_Init:
 520              	.LFB71:
 233:Core/Src/main.c **** 
 521              		.loc 1 233 1 view -0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525 0000 08B5     		push	{r3, lr}
 526              	.LCFI12:
 527              		.cfi_def_cfa_offset 8
 528              		.cfi_offset 3, -8
 529              		.cfi_offset 14, -4
 242:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 50000;
 530              		.loc 1 242 3 view .LVU153
 242:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 50000;
 531              		.loc 1 242 18 is_stmt 0 view .LVU154
 532 0002 0B48     		ldr	r0, .L35
 533 0004 0B4B     		ldr	r3, .L35+4
 534 0006 0360     		str	r3, [r0]
 243:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 535              		.loc 1 243 3 is_stmt 1 view .LVU155
 243:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 536              		.loc 1 243 25 is_stmt 0 view .LVU156
 537 0008 4CF25033 		movw	r3, #50000
 538 000c 4360     		str	r3, [r0, #4]
ARM GAS  /tmp/ccthmvjz.s 			page 23


 244:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 539              		.loc 1 244 3 is_stmt 1 view .LVU157
 244:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 540              		.loc 1 244 24 is_stmt 0 view .LVU158
 541 000e 0023     		movs	r3, #0
 542 0010 8360     		str	r3, [r0, #8]
 245:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 543              		.loc 1 245 3 is_stmt 1 view .LVU159
 245:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 544              		.loc 1 245 26 is_stmt 0 view .LVU160
 545 0012 C360     		str	r3, [r0, #12]
 246:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 546              		.loc 1 246 3 is_stmt 1 view .LVU161
 246:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 547              		.loc 1 246 29 is_stmt 0 view .LVU162
 548 0014 4FF48042 		mov	r2, #16384
 549 0018 0261     		str	r2, [r0, #16]
 247:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 550              		.loc 1 247 3 is_stmt 1 view .LVU163
 247:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 551              		.loc 1 247 30 is_stmt 0 view .LVU164
 552 001a 4361     		str	r3, [r0, #20]
 248:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 553              		.loc 1 248 3 is_stmt 1 view .LVU165
 248:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 554              		.loc 1 248 26 is_stmt 0 view .LVU166
 555 001c 8361     		str	r3, [r0, #24]
 249:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 556              		.loc 1 249 3 is_stmt 1 view .LVU167
 249:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 557              		.loc 1 249 30 is_stmt 0 view .LVU168
 558 001e C361     		str	r3, [r0, #28]
 250:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 559              		.loc 1 250 3 is_stmt 1 view .LVU169
 250:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 560              		.loc 1 250 28 is_stmt 0 view .LVU170
 561 0020 0362     		str	r3, [r0, #32]
 251:Core/Src/main.c ****   {
 562              		.loc 1 251 3 is_stmt 1 view .LVU171
 251:Core/Src/main.c ****   {
 563              		.loc 1 251 7 is_stmt 0 view .LVU172
 564 0022 FFF7FEFF 		bl	HAL_I2C_Init
 565              	.LVL19:
 251:Core/Src/main.c ****   {
 566              		.loc 1 251 6 view .LVU173
 567 0026 00B9     		cbnz	r0, .L34
 259:Core/Src/main.c **** 
 568              		.loc 1 259 1 view .LVU174
 569 0028 08BD     		pop	{r3, pc}
 570              	.L34:
 253:Core/Src/main.c ****   }
 571              		.loc 1 253 5 is_stmt 1 view .LVU175
 572 002a FFF7FEFF 		bl	Error_Handler
 573              	.LVL20:
 574              	.L36:
 575 002e 00BF     		.align	2
 576              	.L35:
ARM GAS  /tmp/ccthmvjz.s 			page 24


 577 0030 00000000 		.word	.LANCHOR3
 578 0034 00580040 		.word	1073764352
 579              		.cfi_endproc
 580              	.LFE71:
 582              		.section	.text.MX_IWDG_Init,"ax",%progbits
 583              		.align	1
 584              		.syntax unified
 585              		.thumb
 586              		.thumb_func
 587              		.fpu softvfp
 589              	MX_IWDG_Init:
 590              	.LFB72:
 267:Core/Src/main.c **** 
 591              		.loc 1 267 1 view -0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595 0000 08B5     		push	{r3, lr}
 596              	.LCFI13:
 597              		.cfi_def_cfa_offset 8
 598              		.cfi_offset 3, -8
 599              		.cfi_offset 14, -4
 276:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 600              		.loc 1 276 3 view .LVU177
 276:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 601              		.loc 1 276 18 is_stmt 0 view .LVU178
 602 0002 0748     		ldr	r0, .L41
 603 0004 074B     		ldr	r3, .L41+4
 604 0006 0360     		str	r3, [r0]
 277:Core/Src/main.c ****   hiwdg.Init.Reload = 4095;
 605              		.loc 1 277 3 is_stmt 1 view .LVU179
 277:Core/Src/main.c ****   hiwdg.Init.Reload = 4095;
 606              		.loc 1 277 24 is_stmt 0 view .LVU180
 607 0008 0023     		movs	r3, #0
 608 000a 4360     		str	r3, [r0, #4]
 278:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 609              		.loc 1 278 3 is_stmt 1 view .LVU181
 278:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 610              		.loc 1 278 21 is_stmt 0 view .LVU182
 611 000c 40F6FF73 		movw	r3, #4095
 612 0010 8360     		str	r3, [r0, #8]
 279:Core/Src/main.c ****   {
 613              		.loc 1 279 3 is_stmt 1 view .LVU183
 279:Core/Src/main.c ****   {
 614              		.loc 1 279 7 is_stmt 0 view .LVU184
 615 0012 FFF7FEFF 		bl	HAL_IWDG_Init
 616              	.LVL21:
 279:Core/Src/main.c ****   {
 617              		.loc 1 279 6 view .LVU185
 618 0016 00B9     		cbnz	r0, .L40
 287:Core/Src/main.c **** 
 619              		.loc 1 287 1 view .LVU186
 620 0018 08BD     		pop	{r3, pc}
 621              	.L40:
 281:Core/Src/main.c ****   }
 622              		.loc 1 281 5 is_stmt 1 view .LVU187
 623 001a FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccthmvjz.s 			page 25


 624              	.LVL22:
 625              	.L42:
 626 001e 00BF     		.align	2
 627              	.L41:
 628 0020 00000000 		.word	.LANCHOR4
 629 0024 00300040 		.word	1073754112
 630              		.cfi_endproc
 631              	.LFE72:
 633              		.section	.text.MX_TIM3_Init,"ax",%progbits
 634              		.align	1
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 638              		.fpu softvfp
 640              	MX_TIM3_Init:
 641              	.LFB75:
 379:Core/Src/main.c **** 
 642              		.loc 1 379 1 view -0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 24
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646 0000 00B5     		push	{lr}
 647              	.LCFI14:
 648              		.cfi_def_cfa_offset 4
 649              		.cfi_offset 14, -4
 650 0002 87B0     		sub	sp, sp, #28
 651              	.LCFI15:
 652              		.cfi_def_cfa_offset 32
 385:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 653              		.loc 1 385 3 view .LVU189
 385:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 654              		.loc 1 385 26 is_stmt 0 view .LVU190
 655 0004 0023     		movs	r3, #0
 656 0006 0293     		str	r3, [sp, #8]
 657 0008 0393     		str	r3, [sp, #12]
 658 000a 0493     		str	r3, [sp, #16]
 659 000c 0593     		str	r3, [sp, #20]
 386:Core/Src/main.c **** 
 660              		.loc 1 386 3 is_stmt 1 view .LVU191
 386:Core/Src/main.c **** 
 661              		.loc 1 386 27 is_stmt 0 view .LVU192
 662 000e 0093     		str	r3, [sp]
 663 0010 0193     		str	r3, [sp, #4]
 391:Core/Src/main.c ****   htim3.Init.Prescaler = 1000;
 664              		.loc 1 391 3 is_stmt 1 view .LVU193
 391:Core/Src/main.c ****   htim3.Init.Prescaler = 1000;
 665              		.loc 1 391 18 is_stmt 0 view .LVU194
 666 0012 1348     		ldr	r0, .L51
 667 0014 134A     		ldr	r2, .L51+4
 668 0016 0260     		str	r2, [r0]
 392:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 669              		.loc 1 392 3 is_stmt 1 view .LVU195
 392:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 670              		.loc 1 392 24 is_stmt 0 view .LVU196
 671 0018 4FF47A72 		mov	r2, #1000
 672 001c 4260     		str	r2, [r0, #4]
 393:Core/Src/main.c ****   htim3.Init.Period = 1000;
ARM GAS  /tmp/ccthmvjz.s 			page 26


 673              		.loc 1 393 3 is_stmt 1 view .LVU197
 393:Core/Src/main.c ****   htim3.Init.Period = 1000;
 674              		.loc 1 393 26 is_stmt 0 view .LVU198
 675 001e 8360     		str	r3, [r0, #8]
 394:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 676              		.loc 1 394 3 is_stmt 1 view .LVU199
 394:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 677              		.loc 1 394 21 is_stmt 0 view .LVU200
 678 0020 C260     		str	r2, [r0, #12]
 395:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 679              		.loc 1 395 3 is_stmt 1 view .LVU201
 395:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 680              		.loc 1 395 28 is_stmt 0 view .LVU202
 681 0022 0361     		str	r3, [r0, #16]
 396:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 682              		.loc 1 396 3 is_stmt 1 view .LVU203
 396:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 683              		.loc 1 396 32 is_stmt 0 view .LVU204
 684 0024 8361     		str	r3, [r0, #24]
 397:Core/Src/main.c ****   {
 685              		.loc 1 397 3 is_stmt 1 view .LVU205
 397:Core/Src/main.c ****   {
 686              		.loc 1 397 7 is_stmt 0 view .LVU206
 687 0026 FFF7FEFF 		bl	HAL_TIM_Base_Init
 688              	.LVL23:
 397:Core/Src/main.c ****   {
 689              		.loc 1 397 6 view .LVU207
 690 002a 90B9     		cbnz	r0, .L48
 401:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 691              		.loc 1 401 3 is_stmt 1 view .LVU208
 401:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 692              		.loc 1 401 34 is_stmt 0 view .LVU209
 693 002c 4FF48053 		mov	r3, #4096
 694 0030 0293     		str	r3, [sp, #8]
 402:Core/Src/main.c ****   {
 695              		.loc 1 402 3 is_stmt 1 view .LVU210
 402:Core/Src/main.c ****   {
 696              		.loc 1 402 7 is_stmt 0 view .LVU211
 697 0032 02A9     		add	r1, sp, #8
 698 0034 0A48     		ldr	r0, .L51
 699 0036 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 700              	.LVL24:
 402:Core/Src/main.c ****   {
 701              		.loc 1 402 6 view .LVU212
 702 003a 60B9     		cbnz	r0, .L49
 406:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 703              		.loc 1 406 3 is_stmt 1 view .LVU213
 406:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 704              		.loc 1 406 37 is_stmt 0 view .LVU214
 705 003c 0023     		movs	r3, #0
 706 003e 0093     		str	r3, [sp]
 407:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 707              		.loc 1 407 3 is_stmt 1 view .LVU215
 407:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 708              		.loc 1 407 33 is_stmt 0 view .LVU216
 709 0040 0193     		str	r3, [sp, #4]
 408:Core/Src/main.c ****   {
ARM GAS  /tmp/ccthmvjz.s 			page 27


 710              		.loc 1 408 3 is_stmt 1 view .LVU217
 408:Core/Src/main.c ****   {
 711              		.loc 1 408 7 is_stmt 0 view .LVU218
 712 0042 6946     		mov	r1, sp
 713 0044 0648     		ldr	r0, .L51
 714 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 715              	.LVL25:
 408:Core/Src/main.c ****   {
 716              		.loc 1 408 6 view .LVU219
 717 004a 30B9     		cbnz	r0, .L50
 416:Core/Src/main.c **** 
 718              		.loc 1 416 1 view .LVU220
 719 004c 07B0     		add	sp, sp, #28
 720              	.LCFI16:
 721              		.cfi_remember_state
 722              		.cfi_def_cfa_offset 4
 723              		@ sp needed
 724 004e 5DF804FB 		ldr	pc, [sp], #4
 725              	.L48:
 726              	.LCFI17:
 727              		.cfi_restore_state
 399:Core/Src/main.c ****   }
 728              		.loc 1 399 5 is_stmt 1 view .LVU221
 729 0052 FFF7FEFF 		bl	Error_Handler
 730              	.LVL26:
 731              	.L49:
 404:Core/Src/main.c ****   }
 732              		.loc 1 404 5 view .LVU222
 733 0056 FFF7FEFF 		bl	Error_Handler
 734              	.LVL27:
 735              	.L50:
 410:Core/Src/main.c ****   }
 736              		.loc 1 410 5 view .LVU223
 737 005a FFF7FEFF 		bl	Error_Handler
 738              	.LVL28:
 739              	.L52:
 740 005e 00BF     		.align	2
 741              	.L51:
 742 0060 00000000 		.word	.LANCHOR5
 743 0064 00040040 		.word	1073742848
 744              		.cfi_endproc
 745              	.LFE75:
 747              		.section	.text.SystemClock_Config,"ax",%progbits
 748              		.align	1
 749              		.global	SystemClock_Config
 750              		.syntax unified
 751              		.thumb
 752              		.thumb_func
 753              		.fpu softvfp
 755              	SystemClock_Config:
 756              	.LFB69:
 141:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 757              		.loc 1 141 1 view -0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 80
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761 0000 00B5     		push	{lr}
ARM GAS  /tmp/ccthmvjz.s 			page 28


 762              	.LCFI18:
 763              		.cfi_def_cfa_offset 4
 764              		.cfi_offset 14, -4
 765 0002 95B0     		sub	sp, sp, #84
 766              	.LCFI19:
 767              		.cfi_def_cfa_offset 88
 142:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 768              		.loc 1 142 3 view .LVU225
 142:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 769              		.loc 1 142 22 is_stmt 0 view .LVU226
 770 0004 2822     		movs	r2, #40
 771 0006 0021     		movs	r1, #0
 772 0008 0DEB0200 		add	r0, sp, r2
 773 000c FFF7FEFF 		bl	memset
 774              	.LVL29:
 143:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 775              		.loc 1 143 3 is_stmt 1 view .LVU227
 143:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 776              		.loc 1 143 22 is_stmt 0 view .LVU228
 777 0010 0023     		movs	r3, #0
 778 0012 0593     		str	r3, [sp, #20]
 779 0014 0693     		str	r3, [sp, #24]
 780 0016 0793     		str	r3, [sp, #28]
 781 0018 0893     		str	r3, [sp, #32]
 782 001a 0993     		str	r3, [sp, #36]
 144:Core/Src/main.c **** 
 783              		.loc 1 144 3 is_stmt 1 view .LVU229
 144:Core/Src/main.c **** 
 784              		.loc 1 144 28 is_stmt 0 view .LVU230
 785 001c 0193     		str	r3, [sp, #4]
 786 001e 0293     		str	r3, [sp, #8]
 787 0020 0393     		str	r3, [sp, #12]
 788 0022 0493     		str	r3, [sp, #16]
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 789              		.loc 1 149 3 is_stmt 1 view .LVU231
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 790              		.loc 1 149 36 is_stmt 0 view .LVU232
 791 0024 0A23     		movs	r3, #10
 792 0026 0A93     		str	r3, [sp, #40]
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 793              		.loc 1 150 3 is_stmt 1 view .LVU233
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 794              		.loc 1 150 30 is_stmt 0 view .LVU234
 795 0028 0123     		movs	r3, #1
 796 002a 0E93     		str	r3, [sp, #56]
 151:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 797              		.loc 1 151 3 is_stmt 1 view .LVU235
 151:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 798              		.loc 1 151 41 is_stmt 0 view .LVU236
 799 002c 1022     		movs	r2, #16
 800 002e 0F92     		str	r2, [sp, #60]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 801              		.loc 1 152 3 is_stmt 1 view .LVU237
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 802              		.loc 1 152 30 is_stmt 0 view .LVU238
 803 0030 1093     		str	r3, [sp, #64]
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/ccthmvjz.s 			page 29


 804              		.loc 1 153 3 is_stmt 1 view .LVU239
 154:Core/Src/main.c ****   {
 805              		.loc 1 154 3 view .LVU240
 154:Core/Src/main.c ****   {
 806              		.loc 1 154 7 is_stmt 0 view .LVU241
 807 0032 0AA8     		add	r0, sp, #40
 808 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 809              	.LVL30:
 154:Core/Src/main.c ****   {
 810              		.loc 1 154 6 view .LVU242
 811 0038 B0B9     		cbnz	r0, .L58
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 812              		.loc 1 161 3 is_stmt 1 view .LVU243
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 813              		.loc 1 161 31 is_stmt 0 view .LVU244
 814 003a 0F23     		movs	r3, #15
 815 003c 0593     		str	r3, [sp, #20]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV4;
 816              		.loc 1 163 3 is_stmt 1 view .LVU245
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV4;
 817              		.loc 1 163 34 is_stmt 0 view .LVU246
 818 003e 0021     		movs	r1, #0
 819 0040 0691     		str	r1, [sp, #24]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 820              		.loc 1 164 3 is_stmt 1 view .LVU247
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 821              		.loc 1 164 35 is_stmt 0 view .LVU248
 822 0042 9023     		movs	r3, #144
 823 0044 0793     		str	r3, [sp, #28]
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 824              		.loc 1 165 3 is_stmt 1 view .LVU249
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 825              		.loc 1 165 36 is_stmt 0 view .LVU250
 826 0046 0891     		str	r1, [sp, #32]
 166:Core/Src/main.c **** 
 827              		.loc 1 166 3 is_stmt 1 view .LVU251
 166:Core/Src/main.c **** 
 828              		.loc 1 166 36 is_stmt 0 view .LVU252
 829 0048 0991     		str	r1, [sp, #36]
 168:Core/Src/main.c ****   {
 830              		.loc 1 168 3 is_stmt 1 view .LVU253
 168:Core/Src/main.c ****   {
 831              		.loc 1 168 7 is_stmt 0 view .LVU254
 832 004a 05A8     		add	r0, sp, #20
 833 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 834              	.LVL31:
 168:Core/Src/main.c ****   {
 835              		.loc 1 168 6 view .LVU255
 836 0050 60B9     		cbnz	r0, .L59
 172:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 837              		.loc 1 172 3 is_stmt 1 view .LVU256
 172:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 838              		.loc 1 172 38 is_stmt 0 view .LVU257
 839 0052 0223     		movs	r3, #2
 840 0054 0193     		str	r3, [sp, #4]
 173:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 841              		.loc 1 173 3 is_stmt 1 view .LVU258
ARM GAS  /tmp/ccthmvjz.s 			page 30


 173:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 842              		.loc 1 173 35 is_stmt 0 view .LVU259
 843 0056 0023     		movs	r3, #0
 844 0058 0393     		str	r3, [sp, #12]
 174:Core/Src/main.c ****   {
 845              		.loc 1 174 3 is_stmt 1 view .LVU260
 174:Core/Src/main.c ****   {
 846              		.loc 1 174 7 is_stmt 0 view .LVU261
 847 005a 01A8     		add	r0, sp, #4
 848 005c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 849              	.LVL32:
 174:Core/Src/main.c ****   {
 850              		.loc 1 174 6 view .LVU262
 851 0060 30B9     		cbnz	r0, .L60
 178:Core/Src/main.c **** 
 852              		.loc 1 178 1 view .LVU263
 853 0062 15B0     		add	sp, sp, #84
 854              	.LCFI20:
 855              		.cfi_remember_state
 856              		.cfi_def_cfa_offset 4
 857              		@ sp needed
 858 0064 5DF804FB 		ldr	pc, [sp], #4
 859              	.L58:
 860              	.LCFI21:
 861              		.cfi_restore_state
 156:Core/Src/main.c ****   }
 862              		.loc 1 156 5 is_stmt 1 view .LVU264
 863 0068 FFF7FEFF 		bl	Error_Handler
 864              	.LVL33:
 865              	.L59:
 170:Core/Src/main.c ****   }
 866              		.loc 1 170 5 view .LVU265
 867 006c FFF7FEFF 		bl	Error_Handler
 868              	.LVL34:
 869              	.L60:
 176:Core/Src/main.c ****   }
 870              		.loc 1 176 5 view .LVU266
 871 0070 FFF7FEFF 		bl	Error_Handler
 872              	.LVL35:
 873              		.cfi_endproc
 874              	.LFE69:
 876              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 877              		.align	2
 878              	.LC0:
 879 0000 74657374 		.ascii	"test modulo debug \015\012\000"
 879      206D6F64 
 879      756C6F20 
 879      64656275 
 879      67200D0A 
 880              		.section	.text.main,"ax",%progbits
 881              		.align	1
 882              		.global	main
 883              		.syntax unified
 884              		.thumb
 885              		.thumb_func
 886              		.fpu softvfp
 888              	main:
ARM GAS  /tmp/ccthmvjz.s 			page 31


 889              	.LFB68:
  84:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 890              		.loc 1 84 1 view -0
 891              		.cfi_startproc
 892              		@ Volatile: function does not return.
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895 0000 08B5     		push	{r3, lr}
 896              	.LCFI22:
 897              		.cfi_def_cfa_offset 8
 898              		.cfi_offset 3, -8
 899              		.cfi_offset 14, -4
  92:Core/Src/main.c **** 
 900              		.loc 1 92 3 view .LVU268
 901 0002 FFF7FEFF 		bl	HAL_Init
 902              	.LVL36:
  99:Core/Src/main.c **** 
 903              		.loc 1 99 3 view .LVU269
 904 0006 FFF7FEFF 		bl	SystemClock_Config
 905              	.LVL37:
 106:Core/Src/main.c ****   MX_SPI1_Init();
 906              		.loc 1 106 3 view .LVU270
 907 000a FFF7FEFF 		bl	MX_GPIO_Init
 908              	.LVL38:
 107:Core/Src/main.c ****   MX_TIM1_Init();
 909              		.loc 1 107 3 view .LVU271
 910 000e FFF7FEFF 		bl	MX_SPI1_Init
 911              	.LVL39:
 108:Core/Src/main.c ****   debug_init();
 912              		.loc 1 108 3 view .LVU272
 913 0012 FFF7FEFF 		bl	MX_TIM1_Init
 914              	.LVL40:
 109:Core/Src/main.c ****   MX_ADC1_Init();
 915              		.loc 1 109 3 view .LVU273
 916 0016 FFF7FEFF 		bl	debug_init
 917              	.LVL41:
 110:Core/Src/main.c ****   MX_I2C2_Init();
 918              		.loc 1 110 3 view .LVU274
 919 001a FFF7FEFF 		bl	MX_ADC1_Init
 920              	.LVL42:
 111:Core/Src/main.c ****   MX_IWDG_Init();
 921              		.loc 1 111 3 view .LVU275
 922 001e FFF7FEFF 		bl	MX_I2C2_Init
 923              	.LVL43:
 112:Core/Src/main.c ****   MX_TIM3_Init();
 924              		.loc 1 112 3 view .LVU276
 925 0022 FFF7FEFF 		bl	MX_IWDG_Init
 926              	.LVL44:
 113:Core/Src/main.c ****   //MX_USART1_UART_Init();
 927              		.loc 1 113 3 view .LVU277
 928 0026 FFF7FEFF 		bl	MX_TIM3_Init
 929              	.LVL45:
 119:Core/Src/main.c **** 
 930              		.loc 1 119 3 view .LVU278
 931 002a 0421     		movs	r1, #4
 932 002c 0548     		ldr	r0, .L64
 933 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
ARM GAS  /tmp/ccthmvjz.s 			page 32


 934              	.LVL46:
 935              	.L62:
 126:Core/Src/main.c ****   {
 936              		.loc 1 126 3 discriminator 1 view .LVU279
 129:Core/Src/main.c ****     delay(500);
 937              		.loc 1 129 5 discriminator 1 view .LVU280
 938 0032 0548     		ldr	r0, .L64+4
 939 0034 FFF7FEFF 		bl	debug_print
 940              	.LVL47:
 130:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 941              		.loc 1 130 5 discriminator 1 view .LVU281
 942 0038 4FF4FA70 		mov	r0, #500
 943 003c FFF7FEFF 		bl	HAL_Delay
 944              	.LVL48:
 126:Core/Src/main.c ****   {
 945              		.loc 1 126 9 discriminator 1 view .LVU282
 946 0040 F7E7     		b	.L62
 947              	.L65:
 948 0042 00BF     		.align	2
 949              	.L64:
 950 0044 000C0140 		.word	1073810432
 951 0048 00000000 		.word	.LC0
 952              		.cfi_endproc
 953              	.LFE68:
 955              		.global	htim3
 956              		.global	htim1
 957              		.global	hspi1
 958              		.global	hiwdg
 959              		.global	hi2c2
 960              		.global	hadc1
 961              		.section	.bss.hadc1,"aw",%nobits
 962              		.align	2
 963              		.set	.LANCHOR2,. + 0
 966              	hadc1:
 967 0000 00000000 		.space	48
 967      00000000 
 967      00000000 
 967      00000000 
 967      00000000 
 968              		.section	.bss.hi2c2,"aw",%nobits
 969              		.align	2
 970              		.set	.LANCHOR3,. + 0
 973              	hi2c2:
 974 0000 00000000 		.space	84
 974      00000000 
 974      00000000 
 974      00000000 
 974      00000000 
 975              		.section	.bss.hiwdg,"aw",%nobits
 976              		.align	2
 977              		.set	.LANCHOR4,. + 0
 980              	hiwdg:
 981 0000 00000000 		.space	12
 981      00000000 
 981      00000000 
 982              		.section	.bss.hspi1,"aw",%nobits
 983              		.align	2
ARM GAS  /tmp/ccthmvjz.s 			page 33


 984              		.set	.LANCHOR0,. + 0
 987              	hspi1:
 988 0000 00000000 		.space	88
 988      00000000 
 988      00000000 
 988      00000000 
 988      00000000 
 989              		.section	.bss.htim1,"aw",%nobits
 990              		.align	2
 991              		.set	.LANCHOR1,. + 0
 994              	htim1:
 995 0000 00000000 		.space	72
 995      00000000 
 995      00000000 
 995      00000000 
 995      00000000 
 996              		.section	.bss.htim3,"aw",%nobits
 997              		.align	2
 998              		.set	.LANCHOR5,. + 0
 1001              	htim3:
 1002 0000 00000000 		.space	72
 1002      00000000 
 1002      00000000 
 1002      00000000 
 1002      00000000 
 1003              		.text
 1004              	.Letext0:
 1005              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1006              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1007              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1008              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1009              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1010              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1011              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1012              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1013              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1014              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1015              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_iwdg.h"
 1016              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1017              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1018              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1019              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1020              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1021              		.file 19 "Core/Modulos/include/debug.h"
 1022              		.file 20 "<built-in>"
ARM GAS  /tmp/ccthmvjz.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccthmvjz.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccthmvjz.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccthmvjz.s:167    .text.MX_GPIO_Init:00000000000000ac $d
     /tmp/ccthmvjz.s:175    .text.Error_Handler:0000000000000000 $t
     /tmp/ccthmvjz.s:182    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccthmvjz.s:214    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccthmvjz.s:220    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccthmvjz.s:289    .text.MX_SPI1_Init:0000000000000038 $d
     /tmp/ccthmvjz.s:295    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccthmvjz.s:301    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccthmvjz.s:406    .text.MX_TIM1_Init:0000000000000060 $d
     /tmp/ccthmvjz.s:412    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccthmvjz.s:418    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccthmvjz.s:507    .text.MX_ADC1_Init:000000000000004c $d
     /tmp/ccthmvjz.s:513    .text.MX_I2C2_Init:0000000000000000 $t
     /tmp/ccthmvjz.s:519    .text.MX_I2C2_Init:0000000000000000 MX_I2C2_Init
     /tmp/ccthmvjz.s:577    .text.MX_I2C2_Init:0000000000000030 $d
     /tmp/ccthmvjz.s:583    .text.MX_IWDG_Init:0000000000000000 $t
     /tmp/ccthmvjz.s:589    .text.MX_IWDG_Init:0000000000000000 MX_IWDG_Init
     /tmp/ccthmvjz.s:628    .text.MX_IWDG_Init:0000000000000020 $d
     /tmp/ccthmvjz.s:634    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccthmvjz.s:640    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccthmvjz.s:742    .text.MX_TIM3_Init:0000000000000060 $d
     /tmp/ccthmvjz.s:748    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccthmvjz.s:755    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccthmvjz.s:877    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccthmvjz.s:881    .text.main:0000000000000000 $t
     /tmp/ccthmvjz.s:888    .text.main:0000000000000000 main
     /tmp/ccthmvjz.s:950    .text.main:0000000000000044 $d
     /tmp/ccthmvjz.s:1001   .bss.htim3:0000000000000000 htim3
     /tmp/ccthmvjz.s:994    .bss.htim1:0000000000000000 htim1
     /tmp/ccthmvjz.s:987    .bss.hspi1:0000000000000000 hspi1
     /tmp/ccthmvjz.s:980    .bss.hiwdg:0000000000000000 hiwdg
     /tmp/ccthmvjz.s:973    .bss.hi2c2:0000000000000000 hi2c2
     /tmp/ccthmvjz.s:966    .bss.hadc1:0000000000000000 hadc1
     /tmp/ccthmvjz.s:962    .bss.hadc1:0000000000000000 $d
     /tmp/ccthmvjz.s:969    .bss.hi2c2:0000000000000000 $d
     /tmp/ccthmvjz.s:976    .bss.hiwdg:0000000000000000 $d
     /tmp/ccthmvjz.s:983    .bss.hspi1:0000000000000000 $d
     /tmp/ccthmvjz.s:990    .bss.htim1:0000000000000000 $d
     /tmp/ccthmvjz.s:997    .bss.htim3:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_I2C_Init
HAL_IWDG_Init
ARM GAS  /tmp/ccthmvjz.s 			page 35


memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
debug_init
HAL_GPIO_TogglePin
debug_print
HAL_Delay
