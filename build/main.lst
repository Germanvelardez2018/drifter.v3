ARM GAS  /tmp/cc4HFbw0.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.init_peripherals,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	init_peripherals:
  24              	.LFB69:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "debug.h"
  22:Core/Src/main.c **** #include "gpio.h"
  23:Core/Src/main.c **** #include "clock_master.h"
  24:Core/Src/main.c **** #include "time.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** extern TIM_HandleTypeDef htim3;
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** static void init_sim(){
  31:Core/Src/main.c ****   HAL_GPIO_WritePin(SIM7000G_BAT_ENA_GPIO_Port,SIM7000G_BAT_ENA_Pin,1);
  32:Core/Src/main.c ****   HAL_GPIO_WritePin(SIM7000G_PWRKEY_GPIO_Port,SIM7000G_PWRKEY_Pin,1);
  33:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port,LED_Pin,1);
ARM GAS  /tmp/cc4HFbw0.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** }
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** static void init_peripherals(){
  26              		.loc 1 38 31 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** 
  41:Core/Src/main.c ****   MX_GPIO_Init();
  35              		.loc 1 41 3 view .LVU1
  36 0002 FFF7FEFF 		bl	MX_GPIO_Init
  37              	.LVL0:
  42:Core/Src/main.c ****   debug_init();
  38              		.loc 1 42 3 view .LVU2
  39 0006 FFF7FEFF 		bl	debug_init
  40              	.LVL1:
  43:Core/Src/main.c **** }
  41              		.loc 1 43 1 is_stmt 0 view .LVU3
  42 000a 08BD     		pop	{r3, pc}
  43              		.cfi_endproc
  44              	.LFE69:
  46              		.section	.text.init_sim,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu softvfp
  53              	init_sim:
  54              	.LFB68:
  30:Core/Src/main.c ****   HAL_GPIO_WritePin(SIM7000G_BAT_ENA_GPIO_Port,SIM7000G_BAT_ENA_Pin,1);
  55              		.loc 1 30 23 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59 0000 10B5     		push	{r4, lr}
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 4, -8
  63              		.cfi_offset 14, -4
  31:Core/Src/main.c ****   HAL_GPIO_WritePin(SIM7000G_PWRKEY_GPIO_Port,SIM7000G_PWRKEY_Pin,1);
  64              		.loc 1 31 3 view .LVU5
  65 0002 094C     		ldr	r4, .L5
  66 0004 0122     		movs	r2, #1
  67 0006 1021     		movs	r1, #16
  68 0008 2046     		mov	r0, r4
  69 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
  70              	.LVL2:
  32:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port,LED_Pin,1);
  71              		.loc 1 32 3 view .LVU6
ARM GAS  /tmp/cc4HFbw0.s 			page 3


  72 000e 0122     		movs	r2, #1
  73 0010 4FF48051 		mov	r1, #4096
  74 0014 2046     		mov	r0, r4
  75 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
  76              	.LVL3:
  33:Core/Src/main.c **** 
  77              		.loc 1 33 3 view .LVU7
  78 001a 0122     		movs	r2, #1
  79 001c 0421     		movs	r1, #4
  80 001e 0348     		ldr	r0, .L5+4
  81 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
  82              	.LVL4:
  35:Core/Src/main.c **** 
  83              		.loc 1 35 1 is_stmt 0 view .LVU8
  84 0024 10BD     		pop	{r4, pc}
  85              	.L6:
  86 0026 00BF     		.align	2
  87              	.L5:
  88 0028 00080140 		.word	1073809408
  89 002c 000C0140 		.word	1073810432
  90              		.cfi_endproc
  91              	.LFE68:
  93              		.section	.rodata.main.str1.4,"aMS",%progbits,1
  94              		.align	2
  95              	.LC0:
  96 0000 72756E3A 		.ascii	"run:8mhz\015\012\000"
  96      386D687A 
  96      0D0A00
  97              		.section	.text.main,"ax",%progbits
  98              		.align	1
  99              		.global	main
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu softvfp
 105              	main:
 106              	.LFB70:
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /**
  47:Core/Src/main.c ****   * @brief  The application entry point.
  48:Core/Src/main.c ****   * @retval int
  49:Core/Src/main.c ****   */
  50:Core/Src/main.c **** int main(void)
  51:Core/Src/main.c **** {
 107              		.loc 1 51 1 is_stmt 1 view -0
 108              		.cfi_startproc
 109              		@ Volatile: function does not return.
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112 0000 08B5     		push	{r3, lr}
 113              	.LCFI2:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 3, -8
 116              		.cfi_offset 14, -4
  52:Core/Src/main.c **** 
  53:Core/Src/main.c ****   HAL_Init();
ARM GAS  /tmp/cc4HFbw0.s 			page 4


 117              		.loc 1 53 3 view .LVU10
 118 0002 FFF7FEFF 		bl	HAL_Init
 119              	.LVL5:
  54:Core/Src/main.c ****   clock_master_set(CLOCK_8MHZ);
 120              		.loc 1 54 3 view .LVU11
 121 0006 0020     		movs	r0, #0
 122 0008 FFF7FEFF 		bl	clock_master_set
 123              	.LVL6:
  55:Core/Src/main.c **** 
  56:Core/Src/main.c ****   init_peripherals();
 124              		.loc 1 56 3 view .LVU12
 125 000c FFF7FEFF 		bl	init_peripherals
 126              	.LVL7:
  57:Core/Src/main.c **** 
  58:Core/Src/main.c ****   init_sim();
 127              		.loc 1 58 3 view .LVU13
 128 0010 FFF7FEFF 		bl	init_sim
 129              	.LVL8:
  59:Core/Src/main.c ****  
  60:Core/Src/main.c **** 
  61:Core/Src/main.c ****   debug_print("run:8mhz\r\n");
 130              		.loc 1 61 3 view .LVU14
 131 0014 0148     		ldr	r0, .L10
 132 0016 FFF7FEFF 		bl	debug_print
 133              	.LVL9:
 134              	.L8:
  62:Core/Src/main.c **** 
  63:Core/Src/main.c ****   while(1);
 135              		.loc 1 63 3 discriminator 1 view .LVU15
 136              		.loc 1 63 11 discriminator 1 view .LVU16
 137              		.loc 1 63 8 discriminator 1 view .LVU17
 138 001a FEE7     		b	.L8
 139              	.L11:
 140              		.align	2
 141              	.L10:
 142 001c 00000000 		.word	.LC0
 143              		.cfi_endproc
 144              	.LFE70:
 146              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 147              		.align	1
 148              		.global	HAL_TIM_PeriodElapsedCallback
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 152              		.fpu softvfp
 154              	HAL_TIM_PeriodElapsedCallback:
 155              	.LVL10:
 156              	.LFB71:
  64:Core/Src/main.c **** 
  65:Core/Src/main.c ****   
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** 
  68:Core/Src/main.c ****   uint8_t counter = 0;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* Infinite loop */
  71:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  72:Core/Src/main.c ****   while (1)
ARM GAS  /tmp/cc4HFbw0.s 			page 5


  73:Core/Src/main.c ****   {
  74:Core/Src/main.c ****     counter ++;
  75:Core/Src/main.c ****     delay(1000);
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****     if(counter == 5){
  78:Core/Src/main.c ****     debug_print("run:0,5mhz\r\n");
  79:Core/Src/main.c ****     debug_deinit();
  80:Core/Src/main.c ****     MX_GPIO_Deinit();
  81:Core/Src/main.c ****     MX_TIM3_Init();
  82:Core/Src/main.c ****     HAL_DeInit();
  83:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim3);
  84:Core/Src/main.c ****     clock_master_set(CLOCK_1MHZ);
  85:Core/Src/main.c ****     HAL_SuspendTick();
  86:Core/Src/main.c ****     HAL_PWR_EnterSLEEPMode(PWR_MAINREGULATOR_ON, PWR_SLEEPENTRY_WFI);    
  87:Core/Src/main.c ****     HAL_Init();
  88:Core/Src/main.c ****     HAL_ResumeTick();
  89:Core/Src/main.c ****     HAL_TIM_Base_Stop_IT(&htim3);
  90:Core/Src/main.c ****     clock_master_set(CLOCK_8MHZ); 
  91:Core/Src/main.c ****     init_peripherals();
  92:Core/Src/main.c ****      debug_print("sleep:off,  \r\n");
  93:Core/Src/main.c ****      counter = 0;
  94:Core/Src/main.c ****     }
  95:Core/Src/main.c ****    
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
  99:Core/Src/main.c ****   }
 100:Core/Src/main.c ****   /* USER CODE END 3 */
 101:Core/Src/main.c **** }
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* tim){
 157              		.loc 1 104 59 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** }
 162              		.loc 1 106 1 view .LVU19
 163 0000 7047     		bx	lr
 164              		.cfi_endproc
 165              	.LFE71:
 167              		.section	.text.Error_Handler,"ax",%progbits
 168              		.align	1
 169              		.global	Error_Handler
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu softvfp
 175              	Error_Handler:
 176              	.LFB72:
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /**
ARM GAS  /tmp/cc4HFbw0.s 			page 6


 112:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 113:Core/Src/main.c ****   * @retval None
 114:Core/Src/main.c ****   */
 115:Core/Src/main.c **** void Error_Handler(void)
 116:Core/Src/main.c **** {
 177              		.loc 1 116 1 view -0
 178              		.cfi_startproc
 179              		@ Volatile: function does not return.
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 117:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 118:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 119:Core/Src/main.c ****   __disable_irq();
 183              		.loc 1 119 3 view .LVU21
 184              	.LBB4:
 185              	.LBI4:
 186              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
ARM GAS  /tmp/cc4HFbw0.s 			page 7


  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/cc4HFbw0.s 			page 8


  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 187              		.loc 2 140 27 view .LVU22
 188              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 189              		.loc 2 142 3 view .LVU23
 190              		.syntax unified
 191              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 192 0000 72B6     		cpsid i
 193              	@ 0 "" 2
 194              		.thumb
 195              		.syntax unified
 196              	.L14:
 197              	.LBE5:
ARM GAS  /tmp/cc4HFbw0.s 			page 9


 198              	.LBE4:
 120:Core/Src/main.c ****   while (1)
 199              		.loc 1 120 3 discriminator 1 view .LVU24
 121:Core/Src/main.c ****   {
 122:Core/Src/main.c ****   }
 200              		.loc 1 122 3 discriminator 1 view .LVU25
 120:Core/Src/main.c ****   while (1)
 201              		.loc 1 120 9 discriminator 1 view .LVU26
 202 0002 FEE7     		b	.L14
 203              		.cfi_endproc
 204              	.LFE72:
 206              		.text
 207              	.Letext0:
 208              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 209              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 210              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 211              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 212              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 213              		.file 8 "Core/Modulos/include/core.h"
 214              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 215              		.file 10 "Core/Modulos/include/clock_master.h"
 216              		.file 11 "Core/Modulos/include/debug.h"
 217              		.file 12 "Core/Modulos/include/gpio.h"
 218              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
ARM GAS  /tmp/cc4HFbw0.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc4HFbw0.s:16     .text.init_peripherals:0000000000000000 $t
     /tmp/cc4HFbw0.s:23     .text.init_peripherals:0000000000000000 init_peripherals
     /tmp/cc4HFbw0.s:47     .text.init_sim:0000000000000000 $t
     /tmp/cc4HFbw0.s:53     .text.init_sim:0000000000000000 init_sim
     /tmp/cc4HFbw0.s:88     .text.init_sim:0000000000000028 $d
     /tmp/cc4HFbw0.s:94     .rodata.main.str1.4:0000000000000000 $d
     /tmp/cc4HFbw0.s:98     .text.main:0000000000000000 $t
     /tmp/cc4HFbw0.s:105    .text.main:0000000000000000 main
     /tmp/cc4HFbw0.s:142    .text.main:000000000000001c $d
     /tmp/cc4HFbw0.s:147    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cc4HFbw0.s:154    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cc4HFbw0.s:168    .text.Error_Handler:0000000000000000 $t
     /tmp/cc4HFbw0.s:175    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
MX_GPIO_Init
debug_init
HAL_GPIO_WritePin
HAL_Init
clock_master_set
debug_print
